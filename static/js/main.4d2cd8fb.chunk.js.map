{"version":3,"sources":["generated.js","Search.js","keyDistances.js","Letter.js","App.js","index.js"],"names":["letters","Map","sanitise","s","replace","a","b","charcode","parseInt","String","fromCharCode","generatedLetters","l","Object","keys","prefix","set","prefixes","Array","from","getGenerated","get","Search","props","Autocomplete","id","style","margin","marginTop","size","fullWidth","options","blurOnSelect","autoComplete","selectOnFocus","freeSolo","getOptionLabel","option","renderInput","params","TextField","label","variant","renderOption","inputValue","matches","match","parts","parse","map","part","index","fontWeight","highlight","text","onChange","_","onSelect","chars","distance","i","j","length","ax","ay","ac","bx","by","bc","Math","abs","useStyles","makeStyles","root","width","Letter","classes","useState","idx","letter","typed","setTyped","useEffect","prevChar","currChar","keyStrokeDelay","dist","has","getDistance","timeoutID","setTimeout","clearTimeout","className","Typography","align","gutterBottom","App","data","setData","bind","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d2cd8fb.chunk.js","sourcesContent":["import generatedLetters from './generated_letters.json';\n\nlet letters = new Map();\n\n// Parse unicode chars\nfunction sanitise(s) {\n  return s.replace(/\\\\u(\\w\\w\\w\\w)/g, function(a,b) {\n    var charcode = parseInt(b, 16);\n    return String.fromCharCode(charcode);\n  });\n}\n\nfor (let l of generatedLetters) {\n  const [prefix] = Object.keys(l);\n  letters.set(\n    sanitise(prefix),\n    sanitise(l[prefix])\n  );\n}\n\nconst prefixes = Array.from(letters.keys());\nexport function getPrefixes() {\n  return prefixes;\n}\n\nexport function getRandomPrefix() {\n  return prefixes[parseInt(Math.random() * (prefixes.length + 1))];\n}\n\nexport function getGenerated(prefix) {\n  return letters.get(prefix);\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport { getPrefixes } from './generated';\n\nexport default function Search(props) {\n  return (\n    <Autocomplete\n      id=\"search-box\"\n      style={{ margin: \"auto\", marginTop: \"2%\" }}\n      size=\"small\"\n      fullWidth={true}\n      options={getPrefixes()}\n      blurOnSelect={true}\n      autoComplete={true}\n      selectOnFocus={true}\n      freeSolo\n      getOptionLabel={(option) => option}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Pick starting words...\" variant=\"outlined\" margin=\"normal\" />\n      )}\n      renderOption={(option, { inputValue }) => {\n        const matches = match(option, inputValue);\n        const parts = parse(option, matches);\n\n        return (\n          <div>\n            {parts.map((part, index) => (\n              <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                {part.text}\n              </span>\n            ))}\n          </div>\n        );\n      }}\n      onChange={(_, prefix) => props.onSelect(prefix)}\n    />\n  );\n}\n","const keys = [\n    \"qwertyuiop\",\n    \"asdfghjkl\",\n    \"zxcvbnm\"\n]\n\nlet distance = new Map();\n\nfunction* chars() {\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < keys[i].length; ++j) {\n      yield [i, j, keys[i][j]];\n    }\n  }\n}\n\nfor (let a of chars()) {\n  const [ax, ay, ac] = a;\n  for (let b of chars()) {\n    const [bx, by, bc] = b;\n    distance[`${ac}:${bc}`] = Math.abs(ax - bx) + Math.abs(ay - by);\n  }\n}\n\nexport default function getDistance(a, b) {\n  let dist = 10;\n  if (distance.has(`${a}:${b}`)) {\n    dist = distance.get(`${a}:${b}`);\n  }\n  return dist;\n}","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport getDistance from './keyDistances';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    margin: \"auto\",\n    marginTop: \"2%\",\n  },\n});\n\nexport default function Letter(props) {\n  const classes = useStyles();\n  const [typed, setTyped] = useState({\n    idx: 0,\n    text: \"\",\n    letter: \"\"\n  });\n\n  useEffect(() => {\n    const {prefix, letter} = props;\n    setTyped({\n      idx: prefix.length,\n      text: prefix,\n      letter: letter,\n    })\n  }, [props.prefix])\n\n  useEffect(() => {\n    const idx = typed.idx;\n    if (!typed.letter || idx >= typed.letter.length) return;\n\n    const prevChar = idx == 0 ? '-' : typed.letter[idx - 1];\n    const currChar = typed.letter[idx];\n    const keyStrokeDelay = getDistance(prevChar, currChar) * 4;\n\n    const timeoutID = setTimeout(() => {\n      setTyped({\n        ...typed,\n        idx: idx + 1,\n        text: typed.text + currChar\n      })\n    }, keyStrokeDelay);\n\n    return () => clearTimeout(timeoutID);\n  }, [typed])\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body1\" align=\"left\" gutterBottom>\n        { typed.text }\n      </Typography>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport './App.css';\nimport Search from './Search';\nimport Letter from './Letter';\nimport { getRandomPrefix, getGenerated } from './generated';\n\nfunction App() {\n  const [data, setData] = useState({});\n\n  const onPrefixSelect = (prefix) => {\n    setData({\n      prefix,\n      letter: getGenerated(prefix),\n    })\n  };\n\n  return (\n    <div className=\"App\">\n      <Search prefix={data.prefix} onSelect={onPrefixSelect.bind(this)} />\n      { data.prefix && <Letter prefix={data.prefix} letter={data.letter} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}